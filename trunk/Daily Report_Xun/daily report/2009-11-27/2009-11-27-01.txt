1.Object类是Java中所有类的祖先。
  在Java中每个类都是由它扩展而来的。
  如果没有明确地指出超类，Object就被认为是这个类的超类。
  
2.在Java中，只有基本类型（primitive types）不是对象。例如，
  数值、字符、和布尔类型的值都不是对象。
  但是，所有的数组类型，不管是对象数组还是基本类型的数组都扩展
  于Object类。
  
3.Object类中的equals方法用于检测一个对象是否等于另外一个对象。
  两个对象状态相等，而且同属于一个类时，那么这两个对象就是相等的。
  Java语言规范要求equals方法具有下面的特性：
  （1）自反性：即x.equals(x)应该返回true。
  （2）对称性：即y.equals(x)返回true，那么x.equals(y)返回true。
  （3）传递性：如果x.equals(y)返回true，y.equals(z)为true，那么
            x.equals(z)返回true。
  （4）一致性：如果x，y引用的对象不变，那么x.equals(y)返回结果也不会变。
  （5）对于x为非空的情况下，那么x.equals(null)应该返回false。
 
 
 
 
  
-------------------------------------------------- Schedule ------------------------------------------------ 
 1.（Q1）丹哥，书上详细讲了equals方法的具体实现，我目前理解就是比较两个对象或字符串是否相等。
        上次丹哥讲了在用equals方法时，最好在前面加一个条件判断变量是否为null。
        如：
        String aa = null;
        if(aa!=null){
            aa.toString();
        } 
        if("A".equals(aa))
        ....
        我想知道equals方法在使用时还应该注意什么，除了上面丹哥讲的这点。
        这个地方书上讲得很细，我有点把握不住重点。
        
        
        
        
        