1.回调是一种常见的程序设计模式。
  在这种模式中，可以指出某个特定事件发生时应该采取的动作。
  我的理解为：在哪种情况下调用接口，调用方法，完成后续的操作。
  
2.内部类是定义在另一个类中的类。
  定义为private的内部类，对其他代码均不可见，
  只能被外围类的方法访问。
  但定义为public，仍然是安全的，也仅限于对这些
  数据有合理需要的外围类访问。
  
3.内部类的对象有一个隐式引用，它引用了实例化该内部类对象
  的外围类对象。
  通过这个指针，可以访问外围类对象的全部状态。
  
  
  
---------------------------------------------------- Schedule ------------------------------------------------   
1.（Q1）丹哥，我对于下面这种形式的类还不是很理解，
        比如：Comparable<Employee>,Comparable<Manager>,
        它为什么要用这种形式表现类呢？有什么区别吗？
        这种形式来表现类一般用在什么地方呢？是用来说明吗？
        还是在写代码的时候有这种必要？我不是很清楚。
        我记得在第5章讲到了这点，希望丹哥说说，我再反回去
        理解一下。
        
2.（Q1）丹哥，内部类我还了解得不多，对于第3点，“引用实例化
        该内部对象的外围类对象”。这句话是不是就是指，如果实
        例化了一个内部类对象，这个对象就具有外围类对象的状态？
        同时被实例化了外围类的实例域？
        
        
        
        
        
        
        
        
        
        
        
        
        
        