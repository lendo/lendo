1.java的3个分支{1.J2SE:基础（重点掌握），2.J2EE:企业开发，3.J2ME:手机软件、移动设备软件、嵌入式软件}。

2.jcp.org:所有java运行标准，规则，语法的介绍网站。（英文）
  www.apache.org：介绍java的网站。（英文）
  www.open-open.com:介绍java最新技术的开源网站，涉及一些项目开发技术。（中文）
  www.blogjava.net:所有java开发者相互交流，技术讨论博客。（中文）
  www.javaeye.com:java开发技术介绍网站。（中文）
  www.enblogs.com:java开发者交流网，与blogjava.net类似。（中文）
  dict.cn:海词网；学习英文词义，英文发音的网站。

3./*java_Home*/  JAVA_HOME:java的环境变量，引用指向jdk的安装路径。
  jdk:开发与运行环境。
  jre:运行环境（某些情况指定，占用系统资源较小）。
  IDE:/*基层开发环境*/  集成开发环境。
--------------------lendo.du-----------------------
1.不是java_Home，一定要全部大写，记住是:JAVA_HOME
2.IDE:不是基层开发环境，是集成开发环境(Integrated Development Environment)
--------------------lendo.du-----------------------
  
4.配置了环境变量之后必须重启cmd，配置才会生效。

5.编写任何java代码时，类名第一个字母都要大写，并且类名为名词（不能为动词，形容词）。
--------------------lendo.du-----------------------
  参考doc目录的编码规范，一定要看。
***************************************************
  你的回复：
         好
  
--------------------lendo.du-----------------------

6.编写java代码在有输入操作符时，操作符前后都加上空格。

7.调用任何java新对象前面都加上new操作符。

8.用eclipse记录每天的总结顺序：在Daily Report_Xun上右键、Team，Update(下载更新丹哥的注释)，完成今天总结后，右键Team，点Commit完成今天提交。

9.doc下的文档查看：点击doc后，点图标Open in Explorer打开。

10.下周完成《java核心技术基础知识》的前3章，重点在第3章(Java基本的程序设计结构)。
  看完后可以去上面介绍的网上搜索点java的技术资料来看；
  可以看《Head first java》，《OReilly.Learning.Java》和《代码规范》。
  
11.CRM:Customer Relationship Management，客户关系管理。目前公司开发与维护的企业业务应用系统。

12.做程序英语很重要，对听、说要求很高，需要加强英文方面的训练，发音要标准。

------------------------------------------------------------------------------------------------------------
1.Java"白皮书"解释了设计Java的初衷，Java语言的特点：
   1.1 简单性： 没有C++中的头文件、指针运算（指针语法）、结构、联合、操作符重载、虚基类等；
                另一方面是用Java编写的软件小，占用资源少。
   1.2 面向对象： 面向对象设计是一种程序设计技术，重点放在数据（即对象）和对象的接口上。
                Java与C++的主要不同点在于多继承，在Java中，相对的是接口概念，以及Java
                  的元类模型。
   1.3 网络技能：Java有扩展例程库，用于处理像HTTP和FTP这类的TCP/IP协议。
               Java应用程序能够通过URL打开和访问网络上的对象。
                 另外，远程方法调用机制使分布式对象之间可以进行通信。
   1.4 健壮性： Java能够通过编译器检测出还未执行程序的错误。
              Java与C++最大的不同在于Java采用的指针模型可以消除重写内存和损坏数据的
                可能性。
                如果必要的话，Java同样能够具有指针的能力，如链表。
              Java是绝对安全的，永远不会存取一个"坏的"指针，造成内存分配错误，也不必
                防范内存泄露。
   1.5 安全性 Sun Microsystem针对Java制定了供人们使用的规范，实现了虚拟机和安全库，并
               处理了所有已知的安全bug。
             Java适用于网络/分布式环境，可以构建防病毒、防篡改的系统。
               从一开始，Java就设计成能够防范各种袭击，包括：
                1.5.1 运行时堆栈溢出。如，蠕虫等病毒常用的袭击手段。
                1.5.2 在自己的处理空间之外破坏内存。
                1.5.3 未经授权读写文件。              
               从Java1.1问世后，Java就有了数字签名类（digitally signed class）的概念。
               通过数字签名类，可以确定类的作者，信任他，此类可在机器上拥有更多权限。
   1.6 体系结构中立 编译器生成一个体系结构中立的目标文件格式class，与特定计算机体系结构无关
                    的字节码指令实现。字节码不仅可以很容易在任何机器上解释执行，还可以迅速翻
                    译成本地机器代码。
                    解释字节码会比运行机器指令慢很多。但虚拟机有个选项，可将使用最频繁的字节码
                    序列翻译成机器码，称为即时编译。
   1.7 可移植性 Java语言中对基本数据类型的大小和有关算法都做了明确的说明。
                二进制数据以固定的格式进行存储和传输，消除了字节顺序的困扰。
                字符串是用标准的Unicode格式存储。
              Java不断更新的版本发布的将常用的用户界面元素映射到不同平台上的用户界面工具箱
                不再依赖于主机的用户接口。
   1.8 解释性 Java解释器可以在任何移植了解释器的机器上执行Java字节码。
   1.9 高性能 字节码可以在运行时，快速翻译成运行这个应用程序特定的CPU机器码。
               目前的即时编译器比传统编译器性能更优越，可以监控经常执行哪些代码并优化这些代码
               以提高速度。更复杂的优化是消除函数调用（内嵌）。它知道哪些类已经加载，在加载当前
               类的情况下，特定函数如果出现过就可以内嵌。必要时还可以撤销此优化。
   1.10 多线程 Java语言编写的多线程应用程序可带来更好的交互响应和实时行为。
                在不同机器上，调用多线程代码相同；Java并没实现平台无关性，它把多线程的实现交给
                底层的操作系统或线程库来完成。
   1.11 动态性 Java编写的程序以及语言本身能适应不断发展的环境，库中可以自由添加新方法和实例
                变量，而对客户端无影响。
                动态性是Java程序能够需要时将某些代码添加到正在运行的程序中。
                
2.网页中运行的Java程序称为applet。静态网页无法实现动态网页的特点，而添加applet可以达到目的。

3.今天，需要在浏览器中显示动态效果时，多数网页直接使用JavaScript或Flash。JavaScript是可以
  直接在HTML中加入的类似Java代码，与Java语法类似，可以调用执行Java代码，生成动态网页，但Java
  程序不能直接调用JavaScript代码。（JavaScript和Flash的规则和语法，以及在网页中如何实现，暂
  不考虑。）

4.Java已经成为用来开发服务器端应用程序的最流行语言，这些程序可以产生网页运行后端逻辑。（目前对此
   技术暂时不考虑）
   
5.Java语言的历史是始于由Patrick Naughton和他伙伴James Gosling创建的"Green"项目，目的是
  为了设计一种能控制某些设备的嵌入式程序的小型语言。经历了很多次失败与挫折，随着1994年Internet
  万维网的日渐发展壮大，Java语言终于得到了它的用武之地。在这样的时机下，Sun发布了Java的第一个
  版本，更多的用户接触到了Java语言，因此不同用户的习惯与想法以及更多对Java语言的要求，Java语言
  在某些方面的缺陷也浮出水面。经过JavaOne会议的不断讨论与总结，陆陆续续发布了之后的很多版本，做
  出了某些改进，扩展了标准类库，提高了系统性能，同时不断修正自身bug。最终得到了目前的最新版本6，
  于2006年末发布。
  
6.Java术语：
          Java Development Kit       JDK    编写Java程序的程序员使用的软件
          Java Runtime Environment   JRE    运行Java程序的用户使用的软件
          Standard Edition           SE     用于桌面或简单的服务器应用的Java平台（标准版）
          Enterprise Edition         EE     用于复杂的服务器应用的Java平台（企业版）
          Micro Edition              ME     用于微型手机cell phone和其他小型设备的Java平台（微型版，嵌入式）
          Java 2                     J2     一个过时的术语，用于描述1998年~2006年之间的Java版本
          Software Development Kit   SDK    一个过时的术语，用于描述1998年~2006年之间的JDK
          Update                     u      Sun的术语，用于发布修改的bug
          NetBeans                   -      Sun的集成开发环境
          
7.Java版本1.5，1.6和5.0版本和6版本是同义词。

8.Java当前的标准版本为Java SE 6，第一次更新后称为JDK 6u1，内部版本号为1.6.0_01。之后依次类推：
  第二次更新为JDK 6u2，第三次更新为JDK 6u3，……;内部为1.6.0_02，1.6.0_03，……
  
9.Java的安装过程和编译命令与系统有关，需要设置系统环境变量。安装好Java后，运行程序时，就与系统无关
  了，因为是在虚拟机JVM上编译运行，由JVM解释成机器码执行。
  
10. 1.早上起来就把文档建立好。
    2.做了哪些工作，学习了什么就马上记录下来。如果在下午，
       或晚上再记有些内容可能就忘了。
    3.每天下午6点之前，丹哥会把我昨天的总结和问题看一遍，
       有问题的地方加上注释。
    4.6点之后，我要从Eclipse更新注释，查看注释内容。
    5.如果问题得到解决，以及总结中注释的内容我能够理解，
       把理解的内容加入到今天的文档Schedule上面，加入
       日志积累里，并把自己的理解加上。还不清楚的地方，
       就把还困惑的问题加在工作记录Schedule下面。
    6.完成了一天的学习后，开始写日志。
          
-------------------------------------------------- Schedule ------------------------------------------------
1.（Q1）J2SE和JDK是不是都是相同的软件？是不是J2SE的版本号比如1.4，1.5就是和JDK的版本号1.4，1.5一样的？
        我又看了下概念，一个是Java平台，一个是Java程序员编程的软件。就是说一个有特定平台支持运行，而另外
        一个不需要？
        
2.（Q2）我把你给我说的协议部分自己总结在了第10点上，看看流程还有没问题，如果没有问题了，我就把它加入到
        协议中去。

