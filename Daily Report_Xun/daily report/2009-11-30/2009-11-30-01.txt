1.有些方法可以用可变的参数调用。
  尽管调用时，参数是1个或多个，但是都是调用的同一个方法。
  
  比如 printf 方法：
      System.out.printf("%d",n);
  和
      System.out.printf("%d %s",n,"widgets");
  第1个是两个参数，第2个是3个参数，都是调用的printf方法。
  
  printf方法是这样定义的：
      public class PrintStream{
          public PrintStream printf(String fmt,Object... args){
              return format(fmt,args);
          }
      }
  这里的省略号...是Java代码的一部分，
  它表明这个方法可以接收任意数量的对象
  
2.String toString()
  返回枚举常量名。
  
  int ordinal()
  返回枚举常量在 enum 声明中的位置，位置从0开始计数。
  
3.能够分析类能力的程序被称为反射（reflective）。

  反射的机制如下：
  （1）在运行中分析类的能力。
  （2）在运行中查看对象，例如，编写一个toString方法供所有类使用。
  （3）实现数组的操作代码。
  （4）利用Method对象，这个对象很像C++中的函数指针。

  反射是一种功能强大且复杂的机制。
  使用它的主要对象是工具构造者，而不是应用程序员。
  
  
  
   -------------------------------------------------- Schedule ------------------------------------------------     
1.（Q1）丹哥，书上详细讲了equals方法的具体实现，我目前理解就是比较两个对象或字符串是否相等。
        上次丹哥讲了在用equals方法时，最好在前面加一个条件判断变量是否为null。
        如：
        String aa = null;
        if(aa!=null){
            aa.toString();
        } 
        if("A".equals(aa))
        ....
        我想知道equals方法在使用时还应该注意什么，除了上面丹哥讲的这点。
        这个地方书上讲得很细，我有点把握不住重点。      
        
2.（Q1）丹哥，反射这节我有些看不太懂，对上面的反射机制描述不是很清楚。
        具体反射是用在什么地方，在那种情况下运行这种功能，也有些模糊。
        可能我现在看得不多，我还应该继续往下看。
        但我认为这个地方有点难理解，希望丹哥帮助下。  