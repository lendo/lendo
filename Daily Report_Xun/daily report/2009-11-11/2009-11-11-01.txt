1.分析HelloWorld!小程序：
  
  public class FirstSample
  {
      public static void main(String[] args)
      {
          System.out.println("We will not use 'Hell,World!'");
      }
  }
  
  1.1 所有的Java应用程序都具有这种结构。
   
  1.2 关键字class后面紧跟类名，并且Java对大小写很敏感：类名FirstSample
       以大写字母开头（为名词）；如果名字由多个单词组成时，每个单词第一个字母应该
       大写[种方式称为骆驼命名法(CamelCase)]。还要注意不要把 main 写成 Main ，
       那样程序无法运行。
       
  1.3 public 称为访问修饰符（access modifier）:用于控制程序的其他部分对这段代码的
                                                   访问级别。类似C++中的public，公用
                                                   访问对象。
                                                   
  1.5 关键字class表明Java程序中全部内容都包含在此类中。我的理解有点类似C++中
       的全局变量。书中的意思是目前将类当作一个加载程序逻辑的容器。估计可能就类似
       是一个程序总的框架，架构。程序逻辑，应该就是函数等各种依次调用，定义了程序
       的行为。书中又说到，类是构建所有Java应用程序和applet的构建块，Java应用
       程序的所有内容都放置在类中，应该是由一块块按照程序逻辑的类组成的，应该来说
       类就属于一个程序的基础模块。
       
  1.6 源代码文件名必须与公有类名字相同，扩展名为 .java ，所以这段代码文件名
       为：FirstSample.java。
       
  1.7 文件名命名好了后，在shell窗口下用javac编译后，便会得到一个字节代码：
      FirstSample.class 类文件，并且与源文件 FirstSample.java 存在
       同一个目录下。
       
  1.8 运行这个程序时，在shell窗口下用命令： java FirstSample 执行，直接是
       类名就可以了。内部运行的方式为：Java虚拟机从指定类FirstSample中的
      main主函数开始执行。Java的每个程序都是这样的，从main开始，所以main
       这个函数是必要的。并且每个程序的main都必须声明为public，在Java SE 1.4
       版本以后都把main强制为public。对于用户自定义的其他函数可以加入类中，
       都是由main主函数来调用。
       
  1.9 划分程序的各个部分用花括号 {} 划定。花括号包含的部分称为"块"。
       良好的习惯是把匹配的花括号上下对齐。
       
  1.10 Java中的所有函数都属于某个类的方法（标准术语称为方法，不是成员函数）。
  
  1.11 与C++相同的是void这个空类型没有返回值，我想如果是C++的void，会
        给系统返回"退出代码"，而Java如果main方法正常退出，是返回给虚拟机
        退出代码0。如果在终止程序时返回其他代码，要进行其他操作，调用另外的
        函数，那在main正常退出之前就需要调用System.exit方法。
        
  1.12 在Java中，每个句子如：System.out.println("We will not use 'Hell,World!'");
        用分号结束。在分号之前，可以把一条句子分为多行。
        
  1.13 System.out.println 这个类似于C++中的函数指的是：
        使用System.out对象并调用了它的println方法。
        点号（.）用于调用方法。
       Java使用的通用语法是：object.method(parameters) //对象.方法（参数）
        等价于C++中的函数调用。
        
  1.14 println中的参数就是字符串，它需要用双引号""分隔，
        双引号所包含都是输出部分，字符串。
        
  1.15 调用println方法，意思就是把（）中的参数传递给已经定义好的println方法。
        它的作用是将传递给它的字符串参数显示在控制台上（目前是shell窗口中），并换行。
       System.out还有一个print方法，少了 ln ，指的就是输出后不换行。
       
  1.16 在Java的方法中，（）中可以没有参数，也可以有1个或多个。
        方法不同，参数的个数也就可能不同。
        但方法后必须紧跟圆括号（）。
        如使用这样的语句：System.out.println()，
        那么就仅输出打印一个空行。
                        
2.Java的注释分为3种，
   第一种是使用 // :注释内容从 // 开始到本行结尾。
                    如果有多行注释，在每行前面都加上 // 。
   第二种是使用 /* */ ：可以把较长内容全部包括进 /* */ 注释掉。
                        但这种方式的注释不能嵌套：从 /* 开始，
                        直到出现 */ ，那么所包括的内容就直接被
                        注释掉了。
   第三种是使用 /** */:书中说可以用来自动生成文档，我试过，但对
                       这种方法还是没直观的理解。
                       
3.Java是强类型语言，每一个变量必须声明一种类型。
  Java共有8种基本类型：4种整型、2种浮点类型、表示Unicode编码的
                       字符单元字符类型char、和表示真值的boolean
                       布尔类型。
                       
4.表示任意精度的不是浮点类型float和double，而是一个Java对象，
   称为"大数值"（big number）。
   二进制系统无法精确表示分数 1/10 ，对这种不含舍入误差，就
   应该用BigDecimal类。
   
5.整型有4种： int    4字节
            short  2字节
            long   8字节
            byte   1字节
  常用的是int整型，byte和short用得较少。长整型long数值后有后缀L。
  
6.Java的每种数据类型取值范围是固定的，
   与运行Java代码的机器无关，因为运行是在Java虚拟机上执行，
   Java是系统无关性的。   
   Java没有无符号类型（unsigned int，unsigned float，等等）
   
7.Java绝大部分应用程序都采用double类型。
  float类型数值有后缀F，没有后缀默认为double类型。
  
8.在Java中，最好不要用char类型表示字符常量。（原因我就暂不探究了）
  最好用抽象数据类型表示字符串。
  
9.判定逻辑条件用boolean（布尔）类型，值为：false 和 true 。
  整型值和布尔值不能相互转换。
  
10.在Java中，每一个变量属于一种类型（type）。
   声明变量时，数据类型在变量名之前。声明完后，以分号结束。
   变量名必须是一个以字母开头，由字母或数字构成的序列。
   变量名的字符应该都是有意义的，而且大小写敏感，但最好不要只存在
   大小写的差异，尽量分别表示其含义。
   变量名长度没限制。
   不能将变量名命名为Java保留字，如public ，class ，boolean等。
   在一行中可以声明多个变量，但不提倡。最好逐一声明可提高程序可读性。
   声明了变量之后，必须要用赋值语句 = 对变量进行显式初始化。
   在Java中，变量声明最好要靠在变量第一次使用的地方，形成良好的编程风格。
   在Java中，不区分变量的声明和定义。如C++中的声明关键字：extern 。
   
11.在Java中，声明常量的是关键字：final 。
   final表示的变量只能被赋值一次，赋值为常量，不能再改。
   常量名习惯上用大写字母表示。
   如果要在多个方法中使用该常量，可以用关键字 static final 设置
   成类常量。类常量是声明定义在main方法外部，并且还被声明为public，
   这样才能被多个方法调用。
   
12.第2章讲到了有关编译和运行Java程序的机制：
    编译和运行Java程序都首先要在操作系统上设置Java运行的环境
    变量。编译和运行Java程序都是在安装了JDK开发包，通过JDK\bin命令里面
    包含javac编译程序的命令把源代码编译为目标文件，再通过JRE中Java虚拟机
    ，把编译后的字节码解释成机器码执行，由JVM负责运行程序。得到最终运行成果。
        
 -------------------------------------------------- Schedule ------------------------------------------------
1.（Q1）丹哥就看看上面我总结的还有问题没吧，
        今天没看好多，而且我觉得今天我看的书上讲的内容都还算可以理解，
        就暂时提不出其他问题了。
        